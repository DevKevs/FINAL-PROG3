@using Newtonsoft.Json
@inject IJSRuntime JSRuntime

        <!-- Sidebar  -->
<div class="sidebar">
    <nav id="sidebar">
        <div class="sidebar-header">
            @if (StorageData != null)
            {
                <h3>@StorageData.Rol</h3>
            }
        </div>
            <div class="container">
                <ul class="list-unstyled components">
                    <p>Fusion Market</p>
                    <li>
                        <a href="/admin">Home</a>
                    </li>
                    <li>
                        <a href="/Productos">Productos</a>
                    </li>
                    <li>
                        <a href="/Categorias">Categorías</a>
                    </li>
                    <li>
                        <a href="/admin">Pedidos</a>
                    </li>
                    <li>
                        <a href="/Clientes">Clientes</a>
                    </li>
                    <li>
                        <a href="/Slider">Slider</a>
                    </li>
                    @if (StorageData != null)
                    {
                        if (StorageData.Rol == "SuperAdmin")
                        {
                            <li>
                                <a href="/Usuarios">Usuarios</a>
                            </li>
                        }
                    }
                </ul>
            </div>
            

            <ul class="list-unstyled CTAs">
                <li>
                    <a href="/" class="download">Cerrar sesión</a>
                </li>
               
            </ul>
        </nav>

</div>
@code{
    public dynamic StorageData { get; set; }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var storage = await JSRuntime.InvokeAsync<string>("storagePicker");
                StorageData = JsonConvert.DeserializeObject(storage);
                StateHasChanged();
            }
            catch (Exception)
            {

                throw;
            }
        }
    }
}        
        
 


