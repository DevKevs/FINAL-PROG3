@page "/Clientes"
@using FinalAmadis.Data
@using System.Net
@using System.IO
@using Newtonsoft.Json
@using Microsoft.Extensions.Logging
@inject ILogger<Index> Logger
@inject IJSRuntime JSRuntime
@using CsvHelper

<div class="card">
    <div class="card-header" style="background-color: #fff">
        <div class="row">
            <div class="col d-inline">
                <div class="row">
                    <div class="col-8">
                        <h3 class="d-inline">Cumpleaños por mes</h3>
                    </div>
                    <div class="col-4">
                        <select id="Drop" @onchange="HandleSubmit" class="form-control">
                            <option value="00" disabled>Seleccione</option>
                            <option value="01">Enero</option>
                            <option value="02">Febrero</option>
                            <option value="03">Marzo</option>
                            <option value="04">Abril</option>
                            <option value="05">Mayo</option>
                            <option value="06">Junio</option>
                            <option value="07">Julio</option>
                            <option value="08">Agosto</option>
                            <option value="09">Septiembre</option>
                            <option value="10">Octubre</option>
                            <option value="11">Noviembre</option>
                            <option value="12">Diciembre</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="col d-inline">
                <button title="Exportar" @onclick="ExportarCSV" class="btn btn-primary mr-2 d-inline float-right"><i class="fas fa-download"></i> Exportar</button>
                <button title="Recargar" @onclick="Reload" class="btn btn-primary mr-2 d-inline float-right"><i class="fas fa-sync-alt"></i></button>
            </div>
        </div>
    </div>
    <div class="card-body">
        <table class="table table-dark table-borderless">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Fecha de nacimiento</th>
                    <th>Correo</th>
                </tr>
            </thead>
            <tbody>
                @if (Datos != null)
                {
                    @foreach (var prov in Datos)
                    {
                        <tr>
                            <td>@prov.Nombre_Usuario</td>
                            <td>@prov.Fecha_Nacimiento</td>
                            <td>@prov.Correo</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        @if (alerta)
        {
            <div class="alert alert-danger text-center" role="alert">
                No se encontraron registros...
            </div>
        }
        @if (Datos == null)
        {
            <div class="d-flex justify-content-center">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden"></span>
                </div>
            </div>
        }
    </div>
</div>
@code {
    List<DatosUsuarios> personas = new List<DatosUsuarios>();
    public dynamic Datos { get; set; }
    string mes = "00";
    bool alerta = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Uri url = new Uri("https://super-mini-market.herokuapp.com/api/Mostrar_Usuarios");
            WebClient client = new WebClient();
            var data = await client.DownloadStringTaskAsync(url);
            Datos = JsonConvert.DeserializeObject(data);
        }
        catch (Exception)
        {
            throw;
        }
    }
    protected async Task Reload()
    {
        try
        {
            Uri url = new Uri("https://super-mini-market.herokuapp.com/api/Mostrar_Usuarios");
            WebClient client = new WebClient();
            var data = await client.DownloadStringTaskAsync(url);
            Datos = JsonConvert.DeserializeObject(data);
            alerta = false;
        }
        catch (Exception)
        {
            throw;
        }
    }
    private async Task HandleSubmit(ChangeEventArgs e)
    {
        try
        {
            alerta = false;
            Uri url = new Uri("https://super-mini-market.herokuapp.com/api/Sacar_Cumpleaños/" + e.Value.ToString());
            WebClient client = new WebClient();
            var data = await client.DownloadStringTaskAsync(url);
            Datos = JsonConvert.DeserializeObject(data);
            if (Datos.ok == false)
            {
                await Reload();
                alerta = true;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private async Task ExportarCSV()
    {
        personas.Clear();
        foreach (var i in Datos)
        {
            personas.Add(new DatosUsuarios() { IdUsuario = i.IdUsuario, Nombre = i.Nombre_Usuario, Apellido = i.Apellido_Usuario, Fecha_Nacimiento = i.Fecha_Nacimiento, Correo = i.Correo });
        }

        using (var memoryStream = new MemoryStream())
        {
            using (var writer = new StreamWriter(memoryStream))
            {
                using (var csv = new CsvWriter(writer))
                {
                    csv.WriteRecords(personas);
                }

                var arr = memoryStream.ToArray();
                await JSRuntime.InvokeAsync<object>("saveAsFile",
                "personas.csv",
                Convert.ToBase64String(arr));
            }
        }
    }

}
