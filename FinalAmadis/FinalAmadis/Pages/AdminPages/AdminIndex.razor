@page "/admin"
@using ChartJs.Blazor.PieChart
@using FinalAmadis.Data
@using System.Net
@using Newtonsoft.Json
@using Microsoft.Extensions.Logging
@inject NavigationManager NavigationManager
@inject ILogger<Index> Logger
@inject IJSRuntime JSRuntime


@if (Datos != null)
{

    <div class="row">
        <div class="col-12 col-sm-6 col-md-8">
            <div class="card" >
                <div class="card-header" style="background-color: #fff">
                    <h4>Pedidos en curso</h4>
                </div>
                <div class="card-body">
                    <table class="table table-dark table-borderless">
                        <thead>
                        <tr>
                            <th>Cliente</th>
                            <th>Telefono</th>
                            <th>Estado</th>
                            <th class="text-center">Acciones</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                            <td>Juan Perez</td>
                            <td>809-558-3221</td>
                            <td>En curso</td>
                            <td class="d-flex justify-content-center">
                                <button title="Editar" class="btn btn-success mr-2" data-toggle="modal" data-target="#exampleModal">
                                    <i class="fas fa-edit"></i>
                                </button>
                            </td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-4">
            <div class="card">
                <div class="card-header" style="background-color: #fff">
                    <h4>Actividad</h4>
                </div>
                <div class="card-body ">
                    <Chart Config="_config"></Chart>
                </div>
            </div>
            <div class="col p-0">
                <div class="card mt-1">
                    <div class="card-header" style="background-color: #fff">
                        <h4>Disponible</h4>
                    </div>
                    <div class="card-body">
                        disponible
                    </div>
                </div>
            </div>
        </div>
    </div>
   
    
}
@if (Datos == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden"></span>
        </div>
    </div>
}

@code{

    public dynamic Datos { get; set; }
    public dynamic Editable { get; set; }
    string jsonString;
    Api consume = new Api();
    private PieConfig _config;
    public string Buscar { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Uri url = new Uri("https://super-mini-market.herokuapp.com/api/Mostrar_Conectados");
            WebClient client = new WebClient();
            var data = await client.DownloadStringTaskAsync(url);
            Datos = JsonConvert.DeserializeObject(data);
            LoadChart();
        }
        catch (Exception)
        {
            throw;
        }
    }
    public void LoadChart()
    {
        _config = new PieConfig
        {
            Options = new PieOptions
            {
                Responsive = true,
                Title = new OptionsTitle
                {
                    Display = true
                }
            }
        };

        foreach (string color in new[] { "Conectados", "Desconectados" })
        {
            _config.Data.Labels.Add(color);
        }
        int dato1 = Convert.ToInt32(Datos.Conectados[0]);
        int dato2 = Convert.ToInt32(Datos.Desconectados[0]);
        PieDataset<int> dataset = new PieDataset<int>(new[] { dato1, dato2 })
        {
            BackgroundColor = new[]
        {
            ColorUtil.ColorHexString(255, 99, 132), // Slice 1 aka "Red"
            ColorUtil.ColorHexString(255, 205, 86), // Slice 2 aka "Yellow"
            ColorUtil.ColorHexString(75, 192, 192), // Slice 3 aka "Green"
            ColorUtil.ColorHexString(54, 162, 235), // Slice 4 aka "Blue"
        }
        };

        _config.Data.Datasets.Add(dataset);
    }
}