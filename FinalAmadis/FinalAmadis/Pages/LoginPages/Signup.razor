@page "/Signup"
@inject NavigationManager NavigationManager
@using FinalAmadis.Data
@using System.Net
@using Newtonsoft.Json
@inject IJSRuntime JSRuntime
<center>
    <div class="col-8 card">
        <div class="col-12 row">
            <p>&nbsp;</p>
        </div>
        <div class="col-12 row">
            <div class="col-6" style="border-right:groove">
                <img src="/Shopping-rafiki.svg" width="400" />
            </div>
            <div class="col-6" style="border-left:thick">
                <EditForm Model="@user" OnValidSubmit="@RegisterUser">
                    <DataAnnotationsValidator />
                    <div>
                        <br /><br />
                    </div>
                    <div>
                        <h3 style="font-weight:bold; color:purple">Fusion Market <br /> Registrarse</h3>
                    </div>
                    <div>
                        <br />
                    </div>
                    <div class="col-12 row">
                        <InputText id="Correo" type="text" placeholder="Nombre" class="form-control" @bind-Value="user.Nombre" />
                        <ValidationMessage For=@(() => user.Nombre) />
                    </div>
                    <br />
                    <div class="col-12 row">
                        <InputText id="Correo" type="text" placeholder="Apellido" class="form-control" @bind-Value="user.Apellido" />
                        <ValidationMessage For=@(() => user.Apellido) />
                    </div>
                    <br />
                    <div class="col-12 row">
                        <InputDate id="Correo" type="date" placeholder="Fecha nacimiento" class="form-control" @bind-Value="fecha" />
                    </div>
                    <br />
                    <div class="col-12 row">
                        <InputText id="Correo" type="email" placeholder="Direccion de correo" class="form-control" @bind-Value="user.Correo" />
                        <ValidationMessage For=@(() => user.Correo) />
                    </div>
                    <br />
                    <div class="col-12 row">
                        <InputText id="Correo" type="password" placeholder="Contraseña" class="form-control" @bind-Value="user.Contraseña" />
                        <ValidationMessage For=@(() => user.Contraseña) />
                    </div>
                    <br />
                    <div class="col-12 row">
                        <span class="col-12"></span>
                        <input type="submit" class="form-control col-6 btn btn-primary" value="Registrarse" />
                        <a href="/" class="col-6">Log in</a>
                    </div>
                </EditForm>
            </div>
        </div>
        <div class="col-12 row">
            <p>&nbsp;</p>
        </div>
    </div>
</center>
<label>@user.Fecha_Nacimiento</label>
@code {
    private RegistroUsuario user = new RegistroUsuario();
    string LoginMesssage;
    DateTime fecha;
    public dynamic Editable { get; set; }
    string jsonString;
    private async Task RegisterUser()
    {
        try
        {
            user.Rol = "Cliente";
            user.Fecha_Nacimiento = fecha.ToString("dd/MM/yyyy");
            jsonString = JsonConvert.SerializeObject(user);
            Uri url = new Uri("https://super-mini-market.herokuapp.com/api/Registro_Usuarios");
            WebClient client = new WebClient();
            var data = await client.UploadStringTaskAsync(url, jsonString);
            Editable = JsonConvert.DeserializeObject(data);
            if (Editable != null)
            {
                Mensajes();
                NavigationManager.NavigateTo("/");
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }
    private async Task Mensajes()
    {
        if (Editable.ok == true)
        {
            await JSRuntime.InvokeVoidAsync("Confirmar", "success", "¡Exito!", "Registro exitoso!");
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("Confirmar", "error", "Vaya!", "Ocurrio un error...");
        }

    }
}
